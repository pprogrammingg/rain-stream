Processing CSV file at path: test_csv/input_1.csv
Begin read_csv...
+++++++++++++++
Exiting read_csv...
+++++++++++++++
----------------------------
Done, client_accounts is
Final state of client_accounts:
____________________________
warning: unused variable: `transaction`
  --> src/TransactionsProcessor.rs:38:57
   |
38 |     pub async fn insert_or_update_client_account(&self, transaction: TransactionRecord) {
   |                                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transaction`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: fields `client_accounts`, `transactions_history`, and `client_worker_map` are never read
  --> src/TransactionsProcessor.rs:20:5
   |
19 | pub struct TransactionProcessor {
   |            -------------------- fields in this struct
20 |     client_accounts: SharedMap<ClientId, Account>,
   |     ^^^^^^^^^^^^^^^
21 |     transactions_history: SharedMap<TransactionId, TransactionRecord>,
   |     ^^^^^^^^^^^^^^^^^^^^
22 |     client_worker_map: SharedMap<ClientId, VecDeque<JoinHandle<()>>>,
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `MAX_WORKERS` is never used
  --> src/TransactionsProcessor.rs:25:7
   |
25 | const MAX_WORKERS: usize = 4;
   |       ^^^^^^^^^^^

warning: associated items `new`, `insert_or_update_client_account`, and `process_records_batch` are never used
   --> src/TransactionsProcessor.rs:29:12
    |
27  | impl TransactionProcessor {
    | ------------------------- associated items in this implementation
28  |     /// Creates a new TransactionProcessor instance
29  |     pub fn new() -> Self {
    |            ^^^
...
38  |     pub async fn insert_or_update_client_account(&self, transaction: TransactionRecord) {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
165 |     pub async fn process_records_batch(
    |                  ^^^^^^^^^^^^^^^^^^^^^

warning: constant `MSG_CHANNEL_SIZE` is never used
 --> src/transactions_manager.rs:5:7
  |
5 | const MSG_CHANNEL_SIZE: usize = 1024;
  |       ^^^^^^^^^^^^^^^^

warning: struct `TransactionsManager` is never constructed
 --> src/transactions_manager.rs:7:12
  |
7 | pub struct TransactionsManager {
  |            ^^^^^^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/transactions_manager.rs:14:12
   |
13 | impl TransactionsManager {
   | ------------------------ associated function in this implementation
14 |     pub fn new() -> Self {
   |            ^^^

warning: function `listen_for_transactions` is never used
  --> src/transactions_manager.rs:33:14
   |
33 | pub async fn listen_for_transactions(
   |              ^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `TransactionsQueue` is never constructed
 --> src/transactions_queue.rs:6:12
  |
6 | pub struct TransactionsQueue {
  |            ^^^^^^^^^^^^^^^^^
  |
  = note: `TransactionsQueue` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: associated items `new`, `enqueue`, `remove_client_from_queue`, `get_tx_list_for_client`, and `print_queue` are never used
  --> src/transactions_queue.rs:17:12
   |
10 | impl TransactionsQueue {
   | ---------------------- associated items in this implementation
...
17 |     pub fn new() -> Self {
   |            ^^^
...
27 |     pub async fn enqueue(
   |                  ^^^^^^^
...
53 |     pub async fn remove_client_from_queue(&self, client_id: &u16) {
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
64 |     pub async fn get_tx_list_for_client(&self, client_id: &u16) -> Option<Vec<TransactionRecord>> {
   |                  ^^^^^^^^^^^^^^^^^^^^^^
...
74 |     pub async fn print_queue(&self) {
   |                  ^^^^^^^^^^^

warning: module `TransactionsProcessor` should have a snake case name
  --> src/main.rs:12:5
   |
12 | mod TransactionsProcessor;
   |     ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `transactions_processor`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: `rain-stream` (bin "rain-stream") generated 11 warnings
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.02s
     Running `target/debug/rain-stream test_csv/input_1.csv`
